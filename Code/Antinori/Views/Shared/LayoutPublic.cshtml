@{ 
    string siteTitle = "Manoscritti Antinoriani";
}

<!DOCTYPE html>
<html lang="zxx" class="no-js">
<head>
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Favicon-->
    <link rel="shortcut icon" href="~/Content/img/Icon/icon.svg">
    <!-- Author Meta -->
    <meta name="author" content="codepixer">
    <!-- Meta Description -->
    <meta name="description" content="">
    <!-- Meta Keyword -->
    <meta name="keywords" content="">
    <!-- meta character set -->
    <meta charset="UTF-8">
    <!-- Site Title -->
    <title>@siteTitle</title>

    <link href="https://fonts.googleapis.com/css?family=Poppins:100,200,400,300,500,600,700" rel="stylesheet">
    <!-- CSS ============================================= -->
    <link rel="stylesheet" href="~/Content/Public/css/linearicons.css">
    <link rel="stylesheet" href="~/Content/Public/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/Content/Public/css/bootstrap.css">
    <link rel="stylesheet" href="~/Content/Public/css/magnific-popup.css">
    <link rel="stylesheet" href="~/Content/Public/css/nice-select.css">
    <link rel="stylesheet" href="~/Content/Public/css/animate.min.css">
    <link rel="stylesheet" href="~/Content/Public/css/owl.carousel.css">
    <link rel="stylesheet" href="~/Content/Public/css/main.css">

    <style>     
        .ls{
            letter-spacing: 0.04em;
        }
        .text-uppercase {
            text-transform: uppercase !important;
        }
        label {
            font-size: 0.75rem;
            font-weight: 700;
            letter-spacing: 0.02em;
            display: inline-block;
        }
        .form-control {
            display: block;
            width: 100%;
            height: calc(3.05rem + 2px);
            padding: 0.8rem 0.8rem;
            font-size: 1rem;
            line-height: 1.45;
            color: #404040;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #e1e1e1;
            border-radius: 0.1875rem;
            -webkit-transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
            transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
            -o-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        }
        input{
            overflow: visible;
            margin: 0;
            font-family: inherit;
            font-size: inherit;
            line-height: inherit;
            -webkit-writing-mode: horizontal-tb !important;
            text-rendering: auto;
            color: -internal-light-dark-color(black, white);
            letter-spacing: normal;
            word-spacing: normal;
            text-transform: none;
            text-indent: 0px;
            text-shadow: none;
            display: inline-block;
            text-align: start;
            -webkit-appearance: textfield;
            background-color: -internal-light-dark-color(white, black);
            -webkit-rtl-ordering: logical;
            cursor: text;
            margin: 0em;
            font: 400 13.3333px Arial;
            padding: 1px 0px;
            border-width: 2px;
            border-style: inset;
            border-color: initial;
            border-image: initial;
        }
        .row {
            display: flex;
            flex-wrap: wrap;
            margin-right: -15px;
            margin-left: -15px;
        }
        .form-group {
            margin-bottom: 1rem;
        }
        .my-button{
            border-radius: 5px!important;
        }
        .my-button-blue {
            border-radius: 5px !important;
        }
        .my-button-blue:hover {
            color: #38a4ff!important;
            background: white !important;
            border-color: #38a4ff !important;
        }
        .myButton:hover {
            color: white !important;
            background: #08956c !important;
            border-color: #0abb87 !important;
        }
        .myButton2:hover {
            color: white !important;
            background: #54391d !important;
            border-color: #654321 !important;
        }
        .overlay{
            z-index: 50;
            background: rgba(255,255,255,0.7);
            border-radius: 3px;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        .grid-item {
            padding: 2px 6px 2px 6px;
            font-size: 16px;
        }
        .myB {
            /*color: black;*/
            color: #777777;
            font-weight: bold;
            font-size: 16px;
        }
        /* Style the caret/arrow */
        .caret {
            cursor: pointer;
            user-select: none; /* Prevent text selection */
        }
        /* Create the caret/arrow and style it */
        .caret::before {
            float: right;
            display: inline-block;
            font-size: 20px;
        }
        /* Rotate the caret/arrow icon when clicked on (using JavaScript) */
        .caret-down::before {
            transform: rotate(180deg);
        }
        /* Hide the nested list */
        .nested {
            display: none;
            background-color: white;
            margin-top: 5px;
        }
        /* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
        .active {
            display: block;
        }
    </style>
</head>
<body>

    <header id="header" id="home">
        <div class="container">
            <div class="row align-items-center justify-content-between d-flex">
                <div id="logo">
                    <a href="/Home/Home">
                        <img src="~/Content/img/Logos/vector/default-monochrome-white.svg" alt="" title="" style="min-width: 200px;" />
                    </a>
                </div>
                <nav id="nav-menu-container" style="margin-right: 0!important;">
                    <ul class="nav-menu">
                        <li class="menu-active"><a href="@Url.Action("Home","Home")">Home</a></li>
                        <li>
                            <a href="">Opere</a>
                            <ul>
                                <li><a href="@Url.Action("P_ReadBooks","Book")">Antinori</a></li>
                                <li><a href="@Url.Action("Fonti","Book")">Fonti</a></li>
                            </ul>
                        </li>
                        <li class="menu-has-children">
                            <a href="#">Guide</a>
                            <ul>
                                <li><a href="@Url.Action("P_GuidaTEI","Home")">Guida TEI</a></li>
                                <li><a href="@Url.Action("P_GuidaFiltri","Home")">Guida Filtri</a></li>
                            </ul>
                        </li>
                        <li><a href="@Url.Action("ChiSiamo","Home")">Chi Siamo</a></li>
                    </ul>
                </nav><!-- #nav-menu-container -->
                <nav id="nav-menu-container" style="float: right!important;">
                    <ul class="nav-menu">
                        @if (User.Identity.IsAuthenticated) {
                            <li class="menu-has-children" style="margin-left: 20px!important; float:right!important;">
                                <a href="#">Benvento @User.Identity.Name</a>
                                <ul>
                                    <li><a href="@Url.Action("P_PublicProfile","Account")">Profilo</a></li>
                                    <li><a href="@Url.Action("P_PublicChangePassword","Account")">Cambia Password</a></li>
                                    <li><a href="@Url.Action("LogOff","Account")">Logout</a></li>
                                </ul>
                            </li>
                            if (User.IsInRole("Admin") || User.IsInRole("Editor")) {
                                <li><a href="@Url.Action("Index","Home")">Backoffice</a></li>
                            }
                        }
                        else {
                            <li><a href="@Url.Action("Login","Account")">Login</a></li>
                            <li><a href="@Url.Action("P_Register","Account")">Registrazione</a></li>
                            <li><a href="@Url.Action("P_ForgotPassword","Account")">Recupero Password</a></li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </header><!-- #header -->
    <!-- BODY.   -->
    @RenderBody()

    <!-- MODALS -->
    <div id="successModal" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title modal-">Risultato Operazione</h5>
                </div>
                <div class="modal-body">
                    <p>Operazione Conclusa con successo!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="{$('#successModal').hide()}" class="btn btn-primary" style="background-color: #0abb87!important; border-color: #0abb87!important;">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <div id="errorModal" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Risultato Operazione</h5>
                </div>
                <div class="modal-body">
                    <p>Si è verificato un errore durante l'operazione, controllare i dati inseriti e riprovare</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="{$('#errorModal').hide()}" style="background-color: #FF0000!important; border-color: #FF4500!important;">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <!-- start footer Area -->
    <footer class="footer-area section-gap" style="padding: 60px 0 60px 0;">
        <div class="container">
            <div class="row">
                <div class="col-lg-5 col-md-6 col-sm-6">
                    <div class="single-footer-widget">
                        <a href="@Url.Action("ChiSiamo","Home")">
                            <h6>Chi Siamo</h6>
                        </a>
                        <p class="footer-text">
                            <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                            Copyright &copy;
                            <script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                            <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        </p>
                    </div>
                </div>
                <div class="col-lg-5  col-md-6 col-sm-6">
                    <div class="single-footer-widget">
                        <a href="@Url.Action("Privacy","Home")">
                            <h6 onclick="">Note Legali e Privacy</h6>
                        </a>
                    </div>
                </div>
                <div class="col-lg-2 col-md-6 col-sm-6 social-widget">
                    <div class="single-footer-widget">
                        <h6>Seguici!</h6>
                        <div class="footer-social d-flex align-items-center">
                            <a href="#"><i class="fa fa-facebook"></i></a>
                            <a href="#"><i class="fa fa-twitter"></i></a>
                            <a href="#"><i class="fa fa-dribbble"></i></a>
                            <a href="#"><i class="fa fa-behance"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- End footer Area -->

    <script src="~/Content/Public/js/vendor/jquery-2.2.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="~/Content/Public/js/vendor/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBhOdIF3Y9382fqJYt5I_sswSrEw5eihAA"></script>
    <script src="~/Content/Public/js/easing.min.js"></script>
    <script src="~/Content/Public/js/hoverIntent.js"></script>
    <script src="~/Content/Public/js/superfish.min.js"></script>
    <script src="~/Content/Public/js/jquery.ajaxchimp.min.js"></script>
    <script src="~/Content/Public/js/jquery.magnific-popup.min.js"></script>
    <script src="~/Content/Public/js/owl.carousel.min.js"></script>
    <script src="~/Content/Public/js/jquery.sticky.js"></script>
    <script src="~/Content/Public/js/jquery.nice-select.min.js"></script>
    <script src="~/Content/Public/js/parallax.min.js"></script>
    <script src="~/Content/Public/js/waypoints.min.js"></script>
    <script src="~/Content/Public/js/jquery.counterup.min.js"></script>
    <script src="~/Content/Public/js/mail-script.js"></script>
    <script src="~/Content/Public/js/main.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.twbsPagination.min.js"></script>
    <script src="~/Scripts/my.js"></script>

    <script>

        var filters = [];

        var numOfElementsToShow = 15;

        var previousIdSelected = "";
        var previousIdSelected2 = "";

        $(document).ready(function () {
            // we want to change the row to be as a menu.
            $(window).scroll(function () {

                if ($("#MyFixedHeader").length) {

                    if ($(this).scrollTop() <= 0) {
                        // we are to the top: set css as normal.
                        $("#MyFixedHeader").css('background-color', '#fff');
                        $("#MyFixedHeader").css('display', 'flex');
                        // remove data.
                        $("#MyFixedHeader").css("position", "");
                        $("#MyFixedHeader").css("width", "");
                        $("#MyFixedHeader").css("top", "");

                        $("#myText").css('color', '#222222');

                    }
                    else {
                        // we are scrolling.
                        $("#MyFixedHeader").css('background-color', 'black');
                        $("#MyFixedHeader").css('width', '100%');
                        $("#MyFixedHeader").css('position', 'fixed');
                        var menuHeight = $("#header").outerHeight(true);
                        $("#MyFixedHeader").css("top", menuHeight);

                        $("#myText").css('color', 'white');
                    }
                }
            });
        });

        $("#Profession").change(function () {
            // show/hide other profession field.
            var value = $("#Profession").val();
            if (value == "Altro") {
                $("#OtherProfessionDiv").show();
            }
            else {
                $("#OtherProfessionDiv").hide();
            }
        });

        function LoadNumberOfPagesToShow() {
            // check if the last selected number of pages to show is the default one.
            if (numOfElementsToShow != 15) {
                // set new value.
                $("#numOfElementsToShow").val(numOfElementsToShow);
            }

        }

        function PublicChangePassword() {
            $('#CONTENT_PublicChangePassword_Form').validate({
                lang: 'it'
            });

            if ($('#CONTENT_PublicChangePassword_Form').valid()) {
                // hide things.
                $("#smallpass").fadeOut('slow');
                $("#nosamepass").fadeOut('slow');

                // if it is not small
                if ($("#pass2").val().length >= 6) {
                    // if are not equal.
                    if ($("#pass2").val() != $("#pass3").val()) {
                        $("#nosamepass").fadeIn('slow');
                        // exit.
                        return false;
                    }
                    else {
                        // hide nosamepass
                        $("#nosamepass").fadeOut('slow');
                    }
                }
                else { // small password.
                      $("#smallpass").show();
                      $("#smallpass").fadeIn(1000);
                    // exit.
                    return false;
                }

            // show the refresher.
            REFRESH_show("MODAL_Refresh");
            var url = '@Url.Action("ChangePassword", "Account")';
            // take the form content by id.
            var data = new FormData($('#CONTENT_PublicChangePassword_Form').get(0));

            $.ajax({
                type: "POST",
                url: url,
                data: data,
                contentType: false,
                processData: false,
                success: function (risultato) {

                    $("#MODAL_ID").modal('toggle');
                        if (!risultato.riuscita) {
                            // set error.
                            $("#errorModal").show();
                        }
                        else {
                            //if all was ok
                            $("#successModal").show();
                        }
                    },
                    error: function () {
                        // set error.
                            $("#errorModal").show();
                    }
            });

        }
    }

        function Save() {
              // validate form.
              $('#CONTENT_Profile_Form').validate({
                  lang: 'it'
              });
              if ($('#CONTENT_Profile_Form').valid()) {
                   REFRESH_show("CONTENT_Refresh");
                   var url = '@Url.Action("SavePublic", "Account")';
                   // take the form content by id.
                   var data = new FormData($('#CONTENT_Profile_Form').get(0));

                  $.ajax({
                        type: "POST",
                        url: url,
                        data: data,
                        contentType: false,
                        processData: false,
                        success: function (risultato) {
                            REFRESH_hide("CONTENT_Refresh");
                            if (risultato.riuscita) {
                                // set view.
                                $("#successModal").show();
                            }
                            else {
                                // set error.
                                $("#errorModal").show();
                            }

                        },
                        error: function () {
                            // set error.
                            $("#errorModal").show();
                        }
                    });
              }
        }

        function SearchPage() {
            // retrieve page and show it.

            // clear advanced search filters.
            $('#filters').empty();

            // reset pagination.
            $('#pagination').empty();
            $('#pagination').removeData("twbs-pagination");
            $('#pagination').unbind("page");

            // retrieve page number and section.
            var pNumber = $("#pageToSearch").val();


            // if we arrived here the page exists.
            var selectedSection = previousIdSelected;
            if (selectedSection) {
                // if the page is empty.
                if (!pNumber) {
                    $("#errorModal").show();
                    return;
                }
                var url = '@Url.Action("P_SearchedPagesByNumberAndName", "Book")' + "?pageNumber=" + pNumber + "&subSectionName=" + selectedSection;
                    // show the refresher.
                    REFRESH_show("CONTENT_Refresh");
                    $.getJSON(url,
                        function (data) {
                            // set data.
                            $("#pages").html(data);
                            // hide the refresher.
                            REFRESH_hide("CONTENT_Refresh");
                        });
            }
            else {
                var url = '@Url.Action("P_SearchedPages", "Book")' + "?pageNumber=" + pNumber;
                // show the refresher.
                REFRESH_show("CONTENT_Refresh");
                $.getJSON(url,
                    function (data) {
                        // set data.
                        $("#pages").html(data);
                        // hide the refresher.
                        REFRESH_hide("CONTENT_Refresh");
                    });

            }


    }

        function SearchPageBySub(subsectionId) {
            var pageNumber = $("#pageToSearch").val();
            // if it is not empty.
            if (pageNumber) {

                // check if the page exists.
                var url = '@Url.Action("PageExists", "Book")' + "?pageNumber=" + pageNumber + "&subsectionId=" + subsectionId;
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: false,
                    processData: false,
                    success: function (risultato) {
                        REFRESH_hide("CONTENT_Refresh");
                        if (risultato) {
                            // set view.
                            var url2 = '@Url.Action("P_TranslateSearchedPageWithAuth", "Book")' + "?pageNumber=" + pageNumber + "&subsectionId=" + subsectionId;
                            window.location.href = url2;
                        }
                        else {
                            // set error.
                            $("#errorModal").show();
                        }
                    },
                    error: function () {
                        // set error.
                        $("#errorModal").show();
                    }
                });
            }
        }

        function ShowOpera(bookId) {
            // shhow opera composition.

            // show refresher.
            REFRESH_show("CONTENT_Refresh");

            $.getJSON('@Url.Action("P_BookSections","Book")' + "?bookId=" + bookId,
                function (model) {
                    $("#container").html(model);

                    // clear childs
                    $("#subsections").html('');

                    REFRESH_hide("CONTENT_Refresh");
            });
        }

        function ShowSubsections(sectionId) {
            // shhow section composition.

            // show refresher.
            REFRESH_show("CONTENT_Refresh");

            $.getJSON('@Url.Action("P_SectionSubsections","Book")' + "?sectionId=" + sectionId,
                function (model) {
                    $("#subsections").html(model);
                    // clear childs
                    $("#pages").html('');

                    $.getJSON('@Url.Action("GetFirstSubsectionInfo","Book")' + "?sectionId=" + sectionId,
                        function (model) {
                            var subSectionId = model.id;
                            var subSectionName = model.name;
                            // show first subsection.
                            ShowSubsectionPages(subSectionId, subSectionName);
                    });
                    REFRESH_hide("CONTENT_Refresh");
            });
        }

        function ShowSubsectionPages(subSectionId, subSectionName) {
            // show subsection pages.

            // show refresher.
            REFRESH_show("CONTENT_Refresh");

            var numberOfPages = 1;

            // clear advanced search filters.
            $('#filters').empty();

            // retrieve number of pages.
            $.getJSON('@Url.Action("P_SubsectionPagesNumber", "Book")' + "?subSectionId=" + subSectionId + "&numberOfPageToShow=" + numOfElementsToShow,
                function (model) {
                    numberOfPages = model;

                    $.getJSON('@Url.Action("P_SubsectionPages","Book")' + "?subSectionId=" + subSectionId + "&page=" + "1" + "&numberOfPageToShow=" + numOfElementsToShow,
                    function (model) {
                    $("#pages").html(model);

                    // deselect.
                    $("#sub_" + previousIdSelected).css("background-color", "white");

                    subSectionName = subSectionName.replace(".", "\\.");
                    subSectionName = subSectionName.replace(" ", "\\ ");

                    // select new.
                    $("#sub_" + subSectionName).css("background-color", "wheat");
                    $("#sub_" + subSectionName).css("border-radius", "0px 25px 25px 0px");

                    // reset pagination.
                    $('#pagination').empty();
                    $('#pagination').removeData("twbs-pagination");
                    $('#pagination').unbind("page");

                    // set pagination.
                    $('#pagination').twbsPagination({
                        totalPages: numberOfPages,
                        visiblePages: 3,
                        cssStyle: 'pagination',
                        onPageClick: function (event, page) {
                            REFRESH_show("CONTENT_Refresh");

                            // re-load pages.
                            $.getJSON('@Url.Action("P_SubsectionPages","Book")' + "?subSectionId=" + subSectionId + "&page=" + page + "&numberOfPageToShow=" + numOfElementsToShow,
                                function (model) {
                                    // set html.
                                    $("#pages").html(model);
                            });
                            REFRESH_hide("CONTENT_Refresh");
                        }
                    });

                    REFRESH_hide("CONTENT_Refresh");

                    // update var.
                    previousIdSelected = subSectionName;
                    previousIdSelected2 = subSectionId;

                });
            });
        }

        function UpdateNumberOfPagesToShow() {
            // set number of pages to show variables.
            numOfElementsToShow = $("#numOfElementsToShow").val();
            // reload.
            ShowSubsectionPages(previousIdSelected2, previousIdSelected);
        }


        function Apply() {
            // set url.
            var insertedFilter = $('#filter').val();

            // clear input.
            $('#filter').val('');

            // if the user inserted a filter.
            if (insertedFilter != '') {
                var url = '@Url.Action("UpdateFilterView", "Book")' + "?filterName=" + insertedFilter;
                // show refresher.
                REFRESH_show("CONTENT_Refresh");
                $.getJSON(url,
                    function (data) {
                        // if the filter exists.
                        if (data && data != "") {

                            // if the filter exists inside the array.
                            if (filters.indexOf(insertedFilter) > -1) {

                            }
                            else {
                                $('#filters').append(data);

                                // update current list of filters.
                                filters.push(insertedFilter);
                            }

                            // update view.
                            var numberOfPages = 1;

                            // retrieve number of pages for advanced search.
                            $.getJSON('@Url.Action("P_PagesNumberByFilters", "Book")' + "?filters=" + filters + "&numberOfPageToShow=" + numOfElementsToShow,
                                function (model) {
                                    numberOfPages = model;

                                    // retrieve pages for advanced search.
                                    $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + "1" + "&numberOfPageToShow=" + numOfElementsToShow,
                                        function (model) {
                                            $("#pages").html(model);
                                            $("#pages").html(model);
                                            // reset pagination.
                                            $('#pagination').empty();
                                            $('#pagination').removeData("twbs-pagination");
                                            $('#pagination').unbind("page");

                                            // set pagination.
                                            $('#pagination').twbsPagination({
                                                totalPages: numberOfPages,
                                                visiblePages: 3,
                                                cssStyle: 'pagination',
                                                onPageClick: function (event, page) {
                                                    REFRESH_show("CONTENT_Refresh");

                                                    // re-load pages.
                                                    $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + page + "&numberOfPageToShow=" + numOfElementsToShow,
                                                        function (model) {
                                                            // set html.
                                                            $("#pages").html(model);
                                                        });
                                                        REFRESH_hide("CONTENT_Refresh");
                                                }
                                            });
                                        });
                                });
                        }
                        // hide refresher.
                        REFRESH_hide("CONTENT_Refresh");
                    });

            }
            else {
                // the user removed a filter.
                // retrieve number of pages for advanced search.
                $.getJSON('@Url.Action("P_PagesNumberByFilters", "Book")' + "?filters=" + filters + "&numberOfPageToShow=" + numOfElementsToShow,
                                function (model) {
                                    numberOfPages = model;

                                    // retrieve pages for advanced search.
                                    $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&numberOfPageToShow=" + numOfElementsToShow,
                                        function (model) {
                                            $("#pages").html(model);
                                            // reset pagination.
                                            $('#pagination').empty();
                                            $('#pagination').removeData("twbs-pagination");
                                            $('#pagination').unbind("page");

                                            // set pagination.
                                            $('#pagination').twbsPagination({
                                                totalPages: numberOfPages,
                                                visiblePages: 3,
                                                cssStyle: 'pagination',
                                                onPageClick: function (event, page) {
                                                    REFRESH_show("CONTENT_Refresh");

                                                    // re-load pages.
                                                    $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + page + "&numberOfPageToShow=" + numOfElementsToShow,
                                                        function (model) {
                                                            // set html.
                                                            $("#pages").html(model);
                                                        });
                                                    REFRESH_hide("CONTENT_Refresh");
                                                }
                                            });
                                        });

                                });
            }
        }

        function RemoveFilter(name) {
            // remove filter.
            filters = $(filters).not([name]).get();
            // remove html.
            $('#' + name).remove();
            $('#br_' + name).remove();

        }

    </script>
    @RenderSection("scripts", required: false)

</body>
</html>




