@model List<Antinori.Models.SubSections>

<div class="row" style="margin-right: 18px!important; margin-left: 18px!important; ">
    <div class=".col-sm">
        <div class="section-top-border" style="padding: 20px!important; border-top: 0!important;">
            <h5 class="mb-20">Sottosezioni</h5>
            <div class="row" style="border-right: 1.5px solid #eee;">
                <div class="col-md-11 mt-sm-30">
                    <div class="">
                        <ul class="unordered-list">
                            @foreach (var sub in Model) {
                                <a href="#!" onclick="ShowSubsectionPages('@sub.Id','@sub.Name')" style="color: black;">
                                    
                                    <li id="sub_@sub.Name" title="@sub.Description">@sub.Name</li>
                                </a>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm" id="pages" style="margin-left: 20px!important; margin-right: 20px!important;">
    </div>
    <div class=".col-sm">
        <div class="section-top-border" style="padding: 20px!important; border-top: 0!important;">
            <h5 class="mb-20">Ricerca Avanzata</h5>
            <div class="row" style="border-left: 1.5px solid #eee;">
                <div class="col-md-11 mt-sm-30">
                    <div class="">
                        <div class="form-group">
                            <label class="ls text-uppercase mb-0">Filtri</label>
                            <input type="text" id="filter" name="filter" value="" placeholder="Inserisci un filtro" class="form-control" style="height: calc(2.05rem + 2px); width: 100%; margin: auto;">
                        </div>
                        <!-- FILTERS -->
                        <div class="col-md-11 mt-sm-30" id="filters" style="padding: 0;">
                        </div>
                        <div class="form-group">
                            <div class="button-group-area mt-40" style="display: table; margin: auto;">
                                <i onclick="Apply()" class="fa fa-check genric-btn info circle my-button" title="Applica Filtri">
                                </i>
                            </div>
                        </div>
                    </div>
                    <div style="margin-top: 30px;">
                        <div class="form-group">
                            <label class="ls text-uppercase mb-0">Cerca Facsimile</label>
                            <input type="number" id="pageToSearch" name="pageToSearch" placeholder="Numero Facsimile" class="form-control" style="height: calc(2.05rem + 2px); width: 50%;">
                        </div>
                        <div class="form-group" >
                            <div class="button-group-area mt-40" style="display: table; margin: auto;">
                                <i onclick="SearchPage()" class="fa fa-check genric-btn info circle my-button" title="Cerca Facsimile">
                                </i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- PAGINATION -->
<div id="pagination" style="display: flex; justify-content: center; margin-top: 20px;">

</div>

<script>

    var filters = [];

    function Apply() {
        // set url.
        var insertedFilter = $('#filter').val();

        // clear input.
        $('#filter').val('');

        // if the user inserted a filter.
        if (insertedFilter != '') {
            var url = '@Url.Action("UpdateFilterView", "Book")' + "?filterName=" + insertedFilter;
            // show refresher.
            REFRESH_show("CONTENT_Refresh");
            $.getJSON(url,
                function (data) {
                    // if the filter exists.
                    if (data && data != "") {

                        // if the filter exists inside the array.
                        if (filters.indexOf(insertedFilter) > -1) {

                        }
                        else {
                            $('#filters').append(data);

                            // update current list of filters.
                            filters.push(insertedFilter);
                        }

                        // update view.
                        var numberOfPages = 1;

                        // retrieve number of pages for advanced search.
                        $.getJSON('@Url.Action("P_PagesNumberByFilters", "Book")' + "?filters=" + filters,
                            function (model) {
                                numberOfPages = model;

                                // retrieve pages for advanced search.
                                $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + "1",
                                    function (model) {
                                        $("#pages").html(model);
                                        $("#pages").html(model);
                                        // reset pagination.
                                        $('#pagination').empty();
                                        $('#pagination').removeData("twbs-pagination");
                                        $('#pagination').unbind("page");

                                        // set pagination.
                                        $('#pagination').twbsPagination({
                                            totalPages: numberOfPages,
                                            visiblePages: 3,
                                            cssStyle: 'pagination',
                                            onPageClick: function (event, page) {
                                                REFRESH_show("CONTENT_Refresh");

                                                // re-load pages.
                                                $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + page,
                                                    function (model) {
                                                        // set html.
                                                        $("#pages").html(model);
                                                    });
                                                    REFRESH_hide("CONTENT_Refresh");
                                            }
                                        });
                                    });
                            });
                    }
                    // hide refresher.
                    REFRESH_hide("CONTENT_Refresh");
                });

        }
        else {
            // the user removed a filter.
            // retrieve number of pages for advanced search.
                        $.getJSON('@Url.Action("P_PagesNumberByFilters", "Book")' + "?filters=" + filters,
                            function (model) {
                                numberOfPages = model;

                                // retrieve pages for advanced search.
                                $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters,
                                    function (model) {
                                        $("#pages").html(model);
                                        // reset pagination.
                                        $('#pagination').empty();
                                        $('#pagination').removeData("twbs-pagination");
                                        $('#pagination').unbind("page");

                                        // set pagination.
                                        $('#pagination').twbsPagination({
                                            totalPages: numberOfPages,
                                            visiblePages: 3,
                                            cssStyle: 'pagination',
                                            onPageClick: function (event, page) {
                                                REFRESH_show("CONTENT_Refresh");

                                                // re-load pages.
                                                $.getJSON('@Url.Action("P_PagesByFilters", "Book")' + "?filters=" + filters + "&page=" + page,
                                                    function (model) {
                                                        // set html.
                                                        $("#pages").html(model);
                                                    });
                                                REFRESH_hide("CONTENT_Refresh");
                                            }
                                        });
                                    });

                            });
        }
    }

    function RemoveFilter(name) {
        // remove filter.
        filters = $(filters).not([name]).get();
        // remove html.
        $('#' + name).remove();
        $('#br_' + name).remove();

    }

    
</script>