@model Antinori.Models.RegisterViewModel

@{
    ViewBag.Title = "Registrazione";
    Layout = "~/Views/Shared/_LayoutPublic.cshtml";
}

<div class="login-box">
    <div class="login-logo">
        <a href="@Url.Action("Home","Home")">
            <img src="~/Content/img/Logos/vector/default-monochrome-white.svg" style="width:360px" />
        </a>
    </div>
    <!-- /.login-logo -->
    <div class="login-box-body" style="border-radius: 10px!important; padding-left: 30px; padding-right: 30px;">

        <p class="login-box-msg">Inserisci i tuoi dati per registrarti</p>
        @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "CONTENT_Form" })) {
            @Html.AntiForgeryToken()
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", type = "email" })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Nome", type = "text" })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Surname, new { @class = "form-control", placeholder = "Cognome", type = "text" })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Cellulare", type = "text" })
                <span class="glyphicon glyphicon-phone form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.DropDownList("Profession", new SelectList(Antinori.Static.BL_Utility.professions), "Seleziona Professione", new { @class = "form-control" })
            </div>

                // set style.
                string style = "";
                if (Model.Profession == null || !Model.Profession.Equals("Altro") || Model.Profession.Equals("")) {
                    style = "display: none;";
                }

            <div class="form-group has-feedback" id="OtherProfessionDiv" style="@style">
                @Html.TextBoxFor(m => m.OtherProfession, new { @class = "form-control", placeholder = "Professione", type = "text" })
                <span class="glyphicon glyphicon glyphicon-pencil form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            </div>
            <div class="row">
                <div class="col-xs-8">
                    <div class="checkbox icheck">
                    </div>
                </div>
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="button" onclick="Register()" class="btn btn-primary btn-block btn-flat" style="background-color: #C0BEBE!important; border-color: #C0BEBE!important; border-radius: 5px; border-width: 0px!important;">Registrati</button>
                </div>
                <!-- /.col -->
            </div>
        }
    </div>
    <!-- /.login-box-body -->
</div>


@section scripts{

    <script>
        $("#Profession").change(function () {
            // show/hide other profession field.
            var value = $("#Profession").val();
            if (value == "Altro") {
                $("#OtherProfessionDiv").show();
            }
            else {
                $("#OtherProfessionDiv").hide();
            }
        });

        function Register () {
              // validate form.
              $('#CONTENT_Form').validate({
                  lang: 'it'
              });

              if ($('#CONTENT_Form').valid()) {
                   REFRESH_show("CONTENT_Refresh");
                   var url = '@Url.Action("Register", "Account")';
                   // take the form content by id.
                   var data = new FormData($('#CONTENT_Form').get(0));

                    $.ajax({
                        type: "POST",
                        url: url,
                        data: data,
                        contentType: false,
                        processData: false,
                        success: function (risultato) {
                            REFRESH_hide("CONTENT_Refresh");
                            if (risultato.riuscita) {
                                // set error.
                                SUCCESS_function("Utente salvato ", "Complimenti!  L'operazione di inserimento si è conclusa con successo!","vai('@Url.Action("Home","Home")')","OK");
                            }
                            else {
                                // set error.
                            DANGER_function("Si è verificato un errore durante l'operazione", "Controllare i dati inseriti e riprovare");
                            }
                        },
                        error: function () {
                            // set error.
                            DANGER_function("Si è verificato un errore durante l'operazione", "Controllare i dati inseriti e riprovare");
                        }
                    });
              }
        }
    </script>
}